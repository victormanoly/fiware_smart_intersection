---
openapi: 3.0.0
info:
  title: Smart Intersection Data Models
  description: Model Definitions for an Intersection Smart System
  version: 1.0.0
servers:
- url: /
paths:
  /ngsi-ld/v1/entities:
    get:
      responses:
        "200":
          description: OK
          content:
            application/ld+json:
              schema:
                type: object
components:
  schemas:
    Intersection:
      allOf:
      - $ref: '#/components/schemas/schema'
    Pedestrian:
      allOf:
      - $ref: '#/components/schemas/schema_4'
    Cyclist:
      allOf:
      - $ref: '#/components/schemas/schema_5'
    Vehicle:
      allOf:
      - $ref: '#/components/schemas/schema_6'
    schema:
      title: Smart Data models - Intersection
      required:
      - id
      - type
      type: object
      description: This model a particular intersection.
      allOf:
      - $ref: '#/components/schemas/GSMA-Commons'
      - $ref: '#/components/schemas/Location-Commons'
      - type: object
        properties:
          type:
            type: string
            description: Property. Model:'https://schema.org/Text'.
            enum:
            - Intersection
          intersectionType:
            type: string
            description: Property. Type of intersection from the point of view of the number of road segments.
            enum:
            - three-leg
            - four-leg
            - multi-leg
          intersectionSignal:
            type: string
            description: Property. Type of intersection from the point of view of the signalization.
            enum:
            - signalized
            - non-signalized
          road:
            $ref: '#/components/schemas/schema_road'
          roadSegment:
            $ref: '#/components/schemas/schema_roadSegment'
          bikeLane:
            $ref: '#/components/schemas/schema_bikeLane'
          pedestrianLane:
            $ref: '#/components/schemas/schema_pedestrianLane'
          intersectionStatus:
            type: string
            description: Property. Intersection status operation
            enum:
            - normal
            - accident
          intersetionAccident:
            $ref: '#/components/schemas/schema_3'
          geoLocation:
            $ref: '#/components/schemas/location'
          currentWeather:
            $ref: '#/components/schemas/schema_currentWeather'
          pedestrian:
            $ref: '#/components/schemas/schema_4'
          cyclist:
            $ref: '#/components/schemas/schema_5'
          vehicle:
            $ref: '#/components/schemas/schema_6'
          municipalityInfo:
            $ref: '#/components/schemas/schema_municipalityInfo'
    GSMA-Commons:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EntityIdentifierType'
        dateCreated:
          type: string
          description: Property. Entity creation timestamp. This will usually be allocated by the storage platform.
          format: date-time
        dateModified:
          type: string
          description: Property. Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.
          format: date-time
        source:
          type: string
          description: Property. A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object.
        name:
          type: string
          description: Property. The name of this item.
        alternateName:
          type: string
          description: Property. An alternative name for this item
        description:
          type: string
          description: Property. A description of this item
        dataProvider:
          type: string
          description: Property. A sequence of characters identifying the provider of the harmonised data entity.
        owner:
          type: array
          description: Property. A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)
          items:
            $ref: '#/components/schemas/EntityIdentifierType'
        seeAlso:
          description: Property. list of uri pointing to additional resources about the item
          oneOf:
          - minItems: 1
            type: array
            items:
              type: string
              format: uri
          - type: string
            format: uri
    EntityIdentifierType:
      description: Property. Unique identifier of the entity
      anyOf:
      - maxLength: 256
        minLength: 1
        pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
        type: string
        description: Property. Identifier format of any NGSI entity
      - type: string
        description: Property. Identifier format of any NGSI entity
        format: uri
    Location-Commons:
      type: object
      properties:
        location:
          description: Geoproperty. Geojson reference to the item. It can be Point, LineString, Polygon, MultiPoint, MultiLineString or MultiPolygon
          oneOf:
          - title: GeoJSON Point
            required:
            - coordinates
            - type
            type: object
            properties:
              type:
                type: string
                enum:
                - Point
              coordinates:
                minItems: 2
                type: array
                items:
                  type: number
              bbox:
                minItems: 4
                type: array
                items:
                  type: number
            description: Geoproperty. Geojson reference to the item. Point
          - title: GeoJSON LineString
            required:
            - coordinates
            - type
            type: object
            properties:
              type:
                type: string
                enum:
                - LineString
              coordinates:
                minItems: 2
                type: array
                items:
                  minItems: 2
                  type: array
                  items:
                    type: number
              bbox:
                minItems: 4
                type: array
                items:
                  type: number
            description: Geoproperty. Geojson reference to the item. LineString
          - title: GeoJSON Polygon
            required:
            - coordinates
            - type
            type: object
            properties:
              type:
                type: string
                enum:
                - Polygon
              coordinates:
                type: array
                items:
                  minItems: 4
                  type: array
                  items:
                    minItems: 2
                    type: array
                    items:
                      type: number
              bbox:
                minItems: 4
                type: array
                items:
                  type: number
            description: Geoproperty. Geojson reference to the item. Polygon
          - title: GeoJSON MultiPoint
            required:
            - coordinates
            - type
            type: object
            properties:
              type:
                type: string
                enum:
                - MultiPoint
              coordinates:
                type: array
                items:
                  minItems: 2
                  type: array
                  items:
                    type: number
              bbox:
                minItems: 4
                type: array
                items:
                  type: number
            description: Geoproperty. Geojson reference to the item. MultiPoint
          - title: GeoJSON MultiLineString
            required:
            - coordinates
            - type
            type: object
            properties:
              type:
                type: string
                enum:
                - MultiLineString
              coordinates:
                type: array
                items:
                  minItems: 2
                  type: array
                  items:
                    minItems: 2
                    type: array
                    items:
                      type: number
              bbox:
                minItems: 4
                type: array
                items:
                  type: number
            description: Geoproperty. Geojson reference to the item. MultiLineString
          - title: GeoJSON MultiPolygon
            required:
            - coordinates
            - type
            type: object
            properties:
              type:
                type: string
                enum:
                - MultiPolygon
              coordinates:
                type: array
                items:
                  type: array
                  items:
                    minItems: 4
                    type: array
                    items:
                      minItems: 2
                      type: array
                      items:
                        type: number
              bbox:
                minItems: 4
                type: array
                items:
                  type: number
            description: Geoproperty. Geojson reference to the item. MultiLineString
        address:
          $ref: '#/components/schemas/LocationCommons_address'
        areaServed:
          type: string
          description: Property. The geographic area where a service or offered item is provided. Model:'https://schema.org/Text'
    schema_1:
      title: ' - Transportation / Road'
      type: object
      description: This entity contains a harmonised geographic and contextual description of a road.
      allOf:
      - $ref: '#/components/schemas/GSMA-Commons'
      - $ref: '#/components/schemas/Location-Commons'
      - $ref: '#/components/schemas/PhysicalObject-Commons'
      - required:
        - roadClass
        - type
        type: object
        properties:
          type:
            type: string
            description: Property. NGSI Entity type. It has to be Road
            enum:
            - Road
          roadClass:
            type: string
            description: 'Property. The classification of this road. Model:''https://schema.org/Text''. Enum:''motorway, primary, residential, secondary, service, tertiary, trunk, unclassified''.  Allowed values: Those described by [OpenStreetMap](http://wiki.openstreetmap.org/wiki/Key:highway).'
            enum:
            - motorway
            - primary
            - residential
            - secondary
            - service
            - tertiary
            - trunk
            - unclassified
          refRoadSegment:
            type: array
            description: Property. Road segments which define this road. Model:'https://schema.org/URL'. Relationship. List of references to entities of type RoadSegment
            items:
              $ref: '#/components/schemas/EntityIdentifierType'
          length:
            minimum: 0
            type: number
            description: Property. Total length of this road in kilometers. Model:'https://schema.org/length'. Units:'Kilometer (Km)'
          responsible:
            type: string
            description: Property. Responsible for the road i.e. the organism or company in charge of its maintenance. Model:'https://schema.org/Text'.
    PhysicalObject-Commons:
      type: object
      properties:
        color:
          type: string
          description: Property. The color of the product. Model:'https://schema.org/color'
        image:
          type: string
          description: Property. An image of the item. Model:'https://schema.org/URL'
          format: uri
        annotations:
          type: array
          description: Property. Annotations about the item. Model:'https://schema.org/Text'
          items:
            type: string
    schema_2:
      title: Smart Data Models - Transportation / Road Segment
      required:
      - allowedVehicleType
      - endPoint
      - id
      - name
      - refRoad
      - startPoint
      - type
      type: object
      description: 'This entity contains a harmonised geographic and contextual description of a road segment. A collection of road segments are used to describe a Road. '
      allOf:
      - $ref: '#/components/schemas/GSMA-Commons'
      - $ref: '#/components/schemas/Location-Commons'
      - $ref: '#/components/schemas/PhysicalObject-Commons'
      - type: object
        properties:
          type:
            type: string
            description: Property. NGSI Entity type. It has to be RoadSegment
            enum:
            - RoadSegment
          refRoad:
            description: Relationship. Road to which this road segment belongs to.
            anyOf:
            - maxLength: 256
              minLength: 1
              pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
              type: string
              description: Property. Identifier format of any NGSI entity
            - type: string
              description: Property. Identifier format of any NGSI entity
              format: uri
          startPoint:
            $ref: '#/components/schemas/location'
          endPoint:
            $ref: '#/components/schemas/location'
          startKilometer:
            minimum: 0
            type: number
            description: 'Property. The kilometer number (measured from the road''s start point) where this road segment starts. Model:''https://schema.org/Number''. '
          endKilometer:
            minimum: 0
            type: number
            description: 'Property. The kilometer number (measured from the road''s start point) where this road segment ends. Model:''https://schema.org/Number''. '
          allowedVehicleType:
            type: array
            description: 'Property. Vehicle type(s) allowed to transit through this road segment. Model:''https://schema.org/Text''. Enum:''agriculturalVehicle, bicycle, bus, car, caravan, carWithCaravan, carWithTrailer, constructionOrMaintenanceVehicle, lorry, moped, motorcycle, motorcycleWithSideCar, motorscooter, tanker, trailer, van, anyVehicle''. Allowed values: The following values defined by _VehicleTypeEnum_, [DATEX 2 version 2.3](http://d2docs.ndwcloud.nu/):'
            items:
              type: string
              enum:
              - agriculturalVehicle
              - bicycle
              - bus
              - car
              - caravan
              - carWithCaravan
              - carWithTrailer
              - constructionOrMaintenanceVehicle
              - lorry
              - moped
              - motorcycle
              - motorcycleWithSideCar
              - motorscooter
              - tanker
              - trailer
              - van
              - anyVehicle
          totalLaneNumber:
            minimum: 1
            type: number
            description: Property. Total number of lanes offered by this road segment. Model:'https://schema.org/Number'.
          length:
            minimum: 0
            type: number
            description: Property. Total length of this road segment in kilometers. Model:'https://schema.org/length'. Units:'Kilometer (Km)'
          maximumAllowedSpeed:
            minimum: 0
            type: number
            description: Property. Maximum allowed speed while transiting this road segment. More restrictive limits might be applied to specific vehicle types (trucks, caravans, etc.). Model:'https://schema.org/Number'. Units:'Kilometer per hour (Km/h)'
          minimumAllowedSpeed:
            minimum: 0
            type: number
            description: Property. Minimum allowed speed while transiting this road segment. Model:'https://schema.org/Number'. Units:'Kilometer per hour (Km/h)'
          maximumAllowedHeight:
            minimum: 0
            type: number
            description: Property. Maximum allowed height for vehicles transiting this road segment. Model:'https://schema.org/Number'. Units:'Meter (m)'. Model:'https://schema.org/height'
          maximumAllowedWeight:
            minimum: 0
            type: number
            description: Property. Maximum allowed weight for vehicles transiting this road segment. Model:'https://schema.org/Number'. Units:'Kilogram (Kg)'. Model:'https://schema.org/weight'
          width:
            minimum: 0
            type: number
            description: Property. Road's segment width.. Model:'https://schema.org/Number'. Units:'Meter (m)'
          laneUsage:
            type: array
            description: 'Property. This attribute can be used to convey specific parameters describing each lane. Model:''https://schema.org/Text''. It must contain a string per road segment lane. The element 0 of the array must contain the information of lane 1, and so on. Format of the referred string must be: <lane_direction>, <lane_minimumAllowedSpeed>, <lane_maximumAllowedSpeed>, <lane_maximumAllowedHeight>, <lane_maximumAllowedWeight>. <lane_direction> is a text string with the following allowed values: `forward`. The lane is currently used in the `forwards` direction. `backward`. The lane is currently used in the `backwards` direction. The only mandatory parameter is `lane_direction`. If not specified, the rest of parameters can be assumed to be equal to those specified at entity level.'
            items:
              type: string
              enum:
              - forward
              - backward
          category:
            type: array
            description: 'Property. Allows to convey extra characteristics of a road segment. Model:''https://schema.org/Text''. Enum:''oneway, toll, link''.  `oneway`: Flags whether the road segment can only be used in one direction. If not present it means road segment can be used in both directions (forwards and backwards). See also [http://wiki.openstreetmap.org/wiki/Key:oneway](http://wiki.openstreetmap.org/wiki/Key:oneway). `toll` : Flags whether the road segment is under toll fees. `link` : Flags whether this road segment is an auxiliary link segment for exiting or entering a road. See [https://wiki.openstreetmap.org/wiki/Tag:highway%3Dmotorway_link](https://wiki.openstreetmap.org/wiki/Tag:highway%3Dmotorway_link). Any other value meaningful to an application.'
            items:
              type: string
              enum:
              - oneway
              - toll
              - link
          status:
            type: string
            description: 'Property. Specific driving conditions on the roadsegment. Use statusDescription for additional information. Enum: ‘open, closed, limited’.  `open`: the roadsegment can be used in full intended capacity, `closed`: no traffic is possible, e.g. due to roadworks, an open bridge or lock, or any other event preventing traffic. `limited`: traffic is possible, but not in the full capacity.'
            items:
              type: string
              enum:
              - open
              - closed
              - limited
          statusDescription:
            type: string
            description: Property. Additional information to the status attribute.
    location:
      description: Geoproperty. Geojson reference to the item. It can be Point, LineString, Polygon, MultiPoint, MultiLineString or MultiPolygon
      oneOf:
      - title: GeoJSON Point
        required:
        - coordinates
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - Point
          coordinates:
            minItems: 2
            type: array
            items:
              type: number
          bbox:
            minItems: 4
            type: array
            items:
              type: number
        description: Geoproperty. Geojson reference to the item. Point
      - title: GeoJSON LineString
        required:
        - coordinates
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - LineString
          coordinates:
            minItems: 2
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
          bbox:
            minItems: 4
            type: array
            items:
              type: number
        description: Geoproperty. Geojson reference to the item. LineString
      - title: GeoJSON Polygon
        required:
        - coordinates
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - Polygon
          coordinates:
            type: array
            items:
              minItems: 4
              type: array
              items:
                minItems: 2
                type: array
                items:
                  type: number
          bbox:
            minItems: 4
            type: array
            items:
              type: number
        description: Geoproperty. Geojson reference to the item. Polygon
      - title: GeoJSON MultiPoint
        required:
        - coordinates
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - MultiPoint
          coordinates:
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
          bbox:
            minItems: 4
            type: array
            items:
              type: number
        description: Geoproperty. Geojson reference to the item. MultiPoint
      - title: GeoJSON MultiLineString
        required:
        - coordinates
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - MultiLineString
          coordinates:
            type: array
            items:
              minItems: 2
              type: array
              items:
                minItems: 2
                type: array
                items:
                  type: number
          bbox:
            minItems: 4
            type: array
            items:
              type: number
        description: Geoproperty. Geojson reference to the item. MultiLineString
      - title: GeoJSON MultiPolygon
        required:
        - coordinates
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - MultiPolygon
          coordinates:
            type: array
            items:
              type: array
              items:
                minItems: 4
                type: array
                items:
                  minItems: 2
                  type: array
                  items:
                    type: number
          bbox:
            minItems: 4
            type: array
            items:
              type: number
        description: Geoproperty. Geojson reference to the item. MultiLineString
    schema_3:
      title: Smart Data Models - RoadAccident schema
      required:
      - id
      - status
      - type
      type: object
      description: A road accident description with causes and aftermath. First version developed in Synchronicity project
      allOf:
      - $ref: '#/components/schemas/GSMA-Commons'
      - $ref: '#/components/schemas/Location-Commons'
      - type: object
        properties:
          type:
            type: string
            description: Property. NGSI Entity type. it has to be RoadAccident
            enum:
            - RoadAccident
          localId:
            type: string
            description: Property. Unique identifier from the source data set. Model:'https://schema.org/Text'
          status:
            type: string
            description: Property. Status of the Road Accident. Model:'https://schema.org/Text'. Enum:'archived, onGoing, solved'
            enum:
            - archived
            - onGoing
            - solved
          accidentDate:
            type: string
            description: Property. Datetime of the accident. Model:'https://schema.org/DateTime'
            format: date-time
          accidentStatisticalDate:
            $ref: '#/components/schemas/schema_3_accidentStatisticalDate'
          accidentType:
            type: array
            description: 'Property. Quick classification this Road Accident. 1: Frontal collision; 2: Frontal-lateral collision; 3: Side crash; 4: Collision; 5: Pedestrian investment; 6: Impact with vehicle stopped or stopped; 7: Impact with parked vehicle; 8: Impact with obstacle; 9: Impact with train; 10: Spill, slip; 11: Accident due to sudden braking; 12: Accident due to falling from a vehicle;. '
            items:
              type: string
              enum:
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
              - "8"
              - "9"
              - "10"
              - "11"
              - "12"
          accidentDescription:
            type: array
            description: 'Property. Description about this Road Accident as a combination of codified situation enlisted. 0: Unspecified circumstance; 1: Driver proceeded regularly without turning; 2: Driver proceeded with a distracted driving or undecided course; 3: Driver proceeded without maintaining a safe distance; 4: Driver proceeded without giving priority to the vehicle coming from the right; 5: Driver proceeded without respecting the stop; 6: Driver proceeded without respecting the signal to give precedence; 7: Driver proceeded against traffic; 8: Driver proceeded without respecting the traffic light or agent signals; 10: Driver proceeded without respecting the signs of prohibition of transit or access; 11: Driver proceeded with speeding; 12: Driver proceeded without respecting the speed limits; 13: Driver proceeded with the dazzling lights crossing other vehicles; 14: Driver turned right regularly; 15: It turned irregularly to the right; 16: Driver turned left regularly; 17: It turned irregularly to the left; 18: Driver passed at the intersection; 20: Driver proceeded regularly; 21: Driver proceeded with a distracted driving or undecided course; 22: Driver proceeded without maintaining a safe distance; 23: Driver proceeded with speeding; 24: Driver proceeded without respecting the speed limits; 25: It proceeded not near the right edge of the roadway; 26: Driver proceeded against traffic; 27: Driver proceeded without respecting the signs of prohibition of transit or access; 28: Driver proceeded with the dazzling lights crossing other vehicles; 29: Driver passed regularly; 30: It passed irregularly to the right; 31: Driver overtook on a curve, on a hill or with insufficient visibility; 32: It overtook a vehicle that was overtaking another; 33: Driver passed without observing the appropriate prohibition sign; 34: Maneuvered in relegation or conversion; 35: Driver maneuvered to get into the flow of circulation; 36: Maneuvering To turn left (private passage, distributor); 37: Driver maneuvered regularly to stop or stop; 38: Driver maneuvered irregularly to stop or stop; 39: It was joined by other irregular two-wheeled vehicles; 40: Driver proceeded regularly; 41: Driver proceeded with speeding; 42: Driver proceeded without respecting the speed limits; 43: Driver proceeded against traffic; 44: Driver passed the vehicle in gear; 45: Maneuvered; 46: Maneuvered without respecting traffic light or agent signals; 47: Driver came out of the driveway without precaution; 48: Driver stepped out of the lane and hit the pawn; 49: It did not give priority to the pedestrian on the appropriate crossings; 50: It overtook a vehicle stopped to allow the crossing; 51: Driver hit the pedestrian with the load; 52: Driver was passing a tram unevenly at the stop; 60: Driver proceeded regularly; 61: Driver proceeded with a distracted driving or undecided course; 62: Driver proceeded without maintaining a safe distance; 63: Driver proceeded against traffic; 64: Driver proceeded with speeding; 65: Driver proceeded without respecting the speed limits; 66: Driver proceeded without respecting the signs of prohibition of transit or access; 67: Driver was passing another vehicle in gear; 68: Driver imprudently crossed the level crossing; 70: Spill with spillage to avoid impact; 71: Listening with spillage for distracted driving; 72: List with over-speed spill; 73: Driver suddenly braked with consequence to the transported; 74: Fall of person from vehicle for: door opening; 75: Fall of person from vehicle for: descent from vehicle in motion; 76: Fall of person from vehicle due to: clinging or improperly placed; 80: Brake failure or failure; 81: Breakage or steering failure; 82: Tire burst or excessive wear; 83: Lack or insufficiency of headlights or position lights; 84: Lack or insufficiency of flashing lights or stopping light signals; 85: Breaking of trailer coupling parts; 86: Deficiency of dangerous goods transport equipment; 87: Deficiency of the adaptations prescribed to vehicles of physically handicapped people; 88: Wheel detachment; 89: Lack or insufficiency of visual devices for cycles. Model:''https://schema.org/Text'''
            items:
              type: string
              enum:
              - "0"
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
              - "8"
              - "9"
              - "10"
              - "11"
              - "12"
              - "13"
              - "14"
              - "15"
              - "16"
              - "17"
              - "18"
              - "19"
              - "20"
              - "21"
              - "22"
              - "23"
              - "24"
              - "25"
              - "26"
              - "27"
              - "28"
              - "29"
              - "30"
              - "31"
              - "32"
              - "33"
              - "34"
              - "35"
              - "36"
              - "37"
              - "38"
              - "39"
              - "40"
              - "41"
              - "42"
              - "43"
              - "44"
              - "45"
              - "46"
              - "47"
              - "48"
              - "49"
              - "50"
              - "51"
              - "52"
              - "53"
              - "54"
              - "55"
              - "56"
              - "57"
              - "58"
              - "59"
              - "60"
              - "61"
              - "62"
              - "63"
              - "64"
              - "65"
              - "66"
              - "67"
              - "68"
              - "69"
              - "70"
              - "71"
              - "72"
              - "73"
              - "74"
              - "75"
              - "76"
              - "77"
              - "78"
              - "79"
              - "80"
              - "81"
              - "82"
              - "83"
              - "84"
              - "85"
              - "86"
              - "87"
              - "88"
              - "89"
          weatherConditions:
            type: array
            description: 'Property. Brief description of weather conditions during this Road Accident. 0 : clearNight 1 : sunnyDay 2 : slightlyCloudy 3 : partlyCloudy 4 : mist 5 : fog 6 : highClouds 7 : cloudy 8 : veryCloudy 9 : overcast 10 : lightRainShower 11 : drizzle 12 : lightRain 13 : heavyRainShower 14 : heavyRain 15 : sleetShower 16 : sleet 17 : hailShower 18 : hail 19 : shower 20 : lightSnow 21 : snow 22 : heavySnowShower 23 : heavySnow 24 : thunderShower 25 : thunder'
            items:
              type: string
              enum:
              - "0"
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
              - "8"
              - "9"
              - "10"
              - "11"
              - "12"
              - "13"
              - "14"
              - "15"
              - "16"
              - "17"
              - "18"
              - "19"
              - "20"
              - "21"
              - "22"
              - "23"
              - "24"
              - "25"
          roadSurface:
            type: string
            description: 'Property. Brief description of the condition of the road during the accident. 1: Dry; 2: Wet; 3: Slippery; 4: frozen; 5: Snowcapped;'
            enum:
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
          roadPaving:
            type: string
            description: 'Property. Road paving. 1: Paved road; 2: Rough paved road; 3: Unpaved road;'
            enum:
            - "1"
            - "2"
            - "3"
          accidentLocation:
            type: string
            description: 'Property. Brief description if the accident took place in a urban or extra-urban area. 0: Regional within the urban area 1: Urban road in the town 2: Provincial road within the town 3: State road within the village 4: Extra-urban road 5: Provincial 6: State road 7: Highway 8: Another way 9: Regional road'
            enum:
            - "0"
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
            - "6"
            - "7"
            - "8"
            - "9"
          roadClass:
            type: string
            description: Property.  The classification of road where this accident took place. Model:'https://wiki.openstreetmap.org/wiki/Key:highway'
          roadIntersection:
            type: string
            description: 'Property. Brief description of the piece of the road where the accident took place.   1: Crossroad; 2: Roundabout; 3: Reported intersection; 4: Intersection with traffic light; 5: Intersection not reported; 6: Rail crossing; 7: Straight; 8: Curve; 9: Bump, bottleneck; 10: Slope; 11: Illuminated gallery; 12: Unlit gallery;'
            enum:
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
            - "6"
            - "7"
            - "8"
            - "9"
            - "10"
            - "11"
            - "12"
          roadTrunk:
            type: string
            description: 'Property. Brief description of type of trunk of the road where the accident took place. 1: Road branch; 2: Secondary branch; 3: Minor branch; 4: Junction branch; 5: Road junction; 6: Motorway left lane; 7: Highway carriageway right; 8: Motorway junction entrance; 9: Highway exit junction; 10: Highway junction trunk; 11: Highway station; 12: Other cases; 15: Extra urban road.'
            enum:
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
            - "6"
            - "7"
            - "8"
            - "9"
            - "10"
            - "11"
            - "12"
            - "15"
          roadSign:
            type: string
            description: 'Property. Brief description of the road sign where the accident took place. 1: Absent; 2: Vertical; 3: Horizontal; 4: Vertical and horizontal; 5: Temporary by construction site;'
            enum:
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
          pedestriansInvolved:
            type: boolean
            description: Property. Boolean to determine if pedestrians were involved in the accidents
          vehiclesInvolved:
            type: array
            description: 'Property. List of the vehicles (and pedestrians) involved because the accident 0 : pedestrian 1 : bicycle 2 : agriculturalVehicle 3 : bus 4 : minibus 5 : car 6 : caravan 7 : tram 8 : tanker 9 : carWithCaravan 10 : carWithTrailer 11 : lorry 12 : moped 13 : tanker 14 : motorcycle 15 : motorcycleWithSideCar 16 : motorscooter 17 : trailer 18 : van 19 : caravan 20 : constructionOrMaintenanceVehicle 21 : trolley 22 : binTrolley 23 : sweepingMachine 24 : cleaningTrolley'
            items:
              type: string
              enum:
              - "0"
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
              - "8"
              - "9"
              - "10"
              - "11"
              - "12"
              - "13"
              - "14"
              - "15"
              - "16"
              - "17"
              - "18"
              - "19"
              - "20"
              - "21"
              - "22"
              - "23"
              - "24"
          weakestSubject:
            type: string
            description: 'Property. vehicle that represent the weakest subject involved because the accident (usually pedestrian). 0 : pedestrian 1 : bicycle 2 : agriculturalVehicle 3 : bus 4 : minibus 5 : car 6 : caravan 7 : tram 8 : tanker 9 : carWithCaravan 10 : carWithTrailer 11 : lorry 12 : moped 13 : tanker 14 : motorcycle 15 : motorcycleWithSideCar 16 : motorscooter 17 : trailer 18 : van 19 : caravan 20 : constructionOrMaintenanceVehicle 21 : trolley 22 : binTrolley 23 : sweepingMachine 24 : cleaningTrolley'
            enum:
            - "0"
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
            - "6"
            - "7"
            - "8"
            - "9"
            - "10"
            - "11"
            - "12"
            - "13"
            - "14"
            - "15"
            - "16"
            - "17"
            - "18"
            - "19"
            - "20"
            - "21"
            - "22"
            - "23"
            - "24"
          numPassengersInjured:
            minimum: 0
            type: integer
            description: Property. Model:'https://schema.org/Number'. Number of vehicle's passengers injured because the accident
          numPassengersDead:
            minimum: 0
            type: integer
            description: Property. Model:'https://schema.org/Number'. Number of vehicle's passengers dead because the accident
          numPedestrianInjured:
            minimum: 0
            type: integer
            description: Property. Model:'https://schema.org/Number'. Number of pedestrians injured because the accident
          numPedestrianDead:
            minimum: 0
            type: integer
            description: Property. Model:'https://schema.org/Number'. Number of pedestrians dead because the accident
          totalInjured:
            minimum: 0
            type: integer
            description: Property. Model:'https://schema.org/Number'. total number of people injured (not dead) because the accident
          totalDeadPeopleWithin30Days:
            minimum: 0
            type: integer
            description: Property. Model:'https://schema.org/Number'. Number of people dead because the aftermath of the accident
          totalDeadPeopleWithin24Hours:
            minimum: 0
            type: integer
            description: Property. Model:'https://schema.org/Number'. Number of people dead directly because the accident
    temperature:
      type: number
      description: Property. Temperature of the item
    relativeHumidity:
      maximum: 1
      minimum: 0
      type: number
      description: Property. Humidity in the Air. Observed instantaneous relative humidity (water vapour in air)
    schema_4:
      title: Smart Data models - Pedestrian
      required:
      - id
      - location
      - type
      type: object
      description: This model a particular pedestrian.
      allOf:
      - $ref: '#/components/schemas/GSMA-Commons'
      - $ref: '#/components/schemas/Location-Commons'
      - type: object
        properties:
          type:
            type: string
            description: Property. Model:'https://schema.org/Text'. Example of definition of a numerical attribute
            enum:
            - Pedestrian
          pedestrianType:
            type: string
            description: Property. Type of pedestrian from the point of view of its age classification
            enum:
            - child
            - adult
            - elderly
          location:
            $ref: '#/components/schemas/location'
          speed:
            description: Property. Denotes the magnitude of the horizontal component of the vehicle's current velocity and is specified in Kilometers per Hour. If provided, the value of the speed attribute must be a non-negative real number. `-1` MAY be used if speed is transiently unknown for some reason. Model:'https://schema.org/Number'. Units:'Km/h'
            oneOf:
            - minimum: 0
              type: number
            - maximum: -1
              minimum: -1
              type: number
          heading:
            description: Property. Denotes the direction of travel of the pedestrian and is specified in decimal degrees, where 0 <= `heading` < 360, counting clockwise relative to the true north. If the pedestrian is stationary (i.e. the value of the `speed` attribute is `0`), then the value of the heading attribute must be equal to `-1`. Model:'https://schema.org/Number'. Units:'Degree'
            oneOf:
            - maximum: 360
              minimum: 0
              type: number
            - type: number
          bearing:
            type: number
            description: Property. Model:'https://schema.org/Number'. Gives the pedestrian GPS angle measured in a clockwise direction from the True North. SameAs 'bearing' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)
          zoneName:
            type: string
            description: Property. Model:'https://schema.org/Text'. Zone name of the entity corresponding to this observation
          observationDateTime:
            type: string
            description: Property. Model:'https://schema.org/DateTime'. Last reported time of observation
            format: date-time
          reportID:
            type: string
            description: Property. Model:'https://schema.org/Text'. Unique Id assigned for the issue or report or feedback or transaction corresponding to this observation.
          municipalityInfo:
            $ref: '#/components/schemas/schema_4_municipalityInfo'
    schema_5:
      title: Smart Data models - Cyclist
      required:
      - id
      - location
      - type
      type: object
      description: This model a particular cyclist.
      allOf:
      - $ref: '#/components/schemas/GSMA-Commons'
      - $ref: '#/components/schemas/Location-Commons'
      - type: object
        properties:
          type:
            type: string
            description: Property. Model:'https://schema.org/Text'. Example of definition of a numerical attribute
            enum:
            - Cyclist
          location:
            $ref: '#/components/schemas/location'
          speed:
            description: Property. Denotes the magnitude of the horizontal component of the vehicle's current velocity and is specified in Kilometers per Hour. If provided, the value of the speed attribute must be a non-negative real number. `-1` MAY be used if speed is transiently unknown for some reason. Model:'https://schema.org/Number'. Units:'Km/h'
            oneOf:
            - minimum: 0
              type: number
            - maximum: -1
              minimum: -1
              type: number
          heading:
            description: Property. Denotes the direction of travel of the pedestrian and is specified in decimal degrees, where 0 <= `heading` < 360, counting clockwise relative to the true north. If the pedestrian is stationary (i.e. the value of the `speed` attribute is `0`), then the value of the heading attribute must be equal to `-1`. Model:'https://schema.org/Number'. Units:'Degree'
            oneOf:
            - maximum: 360
              minimum: 0
              type: number
            - type: number
          bearing:
            type: number
            description: Property. Model:'https://schema.org/Number'. Gives the pedestrian GPS angle measured in a clockwise direction from the True North. SameAs 'bearing' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)
          zoneName:
            type: string
            description: Property. Model:'https://schema.org/Text'. Zone name of the entity corresponding to this observation
          observationDateTime:
            type: string
            description: Property. Model:'https://schema.org/DateTime'. Last reported time of observation
            format: date-time
          reportID:
            type: string
            description: Property. Model:'https://schema.org/Text'. Unique Id assigned for the issue or report or feedback or transaction corresponding to this observation.
          municipalityInfo:
            $ref: '#/components/schemas/schema_4_municipalityInfo'
    schema_6:
      title: Smart Data Models - Vehicle
      required:
      - category
      - id
      - location
      - type
      - vehicleType
      type: object
      description: This entity models a particular vehicle model, including all properties which are common to multiple vehicle instances belonging to such model.
      allOf:
      - $ref: '#/components/schemas/GSMA-Commons'
      - $ref: '#/components/schemas/Location-Commons'
      - $ref: '#/components/schemas/PhysicalObject-Commons'
      - type: object
        properties:
          type:
            type: string
            description: Property. NGSI Entity type. It has to be Vehicle
            enum:
            - Vehicle
          vehicleType:
            type: string
            description: Property. Type of vehicle from the point of view of its structural characteristics. This is different than the vehicle category . Model:'https://schema.org/Text'. Enum:'agriculturalVehicle, anyVehicle, articulatedVehicle, bicycle, binTrolley, bus, car, caravan, carOrLightVehicle, carWithCaravan, carWithTrailer, cleaningTrolley, constructionOrMaintenanceVehicle, fourWheelDrive, highSidedVehicle, lorry, minibus, moped, motorcycle, motorcycleWithSideCar, motorscooter, sweepingMachine, tanker, threeWheeledVehicle, trailer, tram, twoWheeledVehicle, trolley, van, vehicleWithoutCatalyticConverter, vehicleWithCaravan, vehicleWithTrailer, withEvenNumberedRegistrationPlates, withOddNumberedRegistrationPlates, other'. The following values defined by _VehicleTypeEnum_ and _VehicleTypeEnum2_, [DATEX 2 version 2.3](http://d2docs.ndwcloud.nu/_static/umlmodel/v2.3/index.htm) and extended for other uses
            enum:
            - agriculturalVehicle
            - ambulance
            - anyVehicle
            - articulatedVehicle
            - autorickshaw
            - bicycle
            - binTrolley
            - BRT mini bus·
            - BRT bus
            - bus
            - car
            - caravan
            - carOrLightVehicle
            - carWithCaravan
            - carWithTrailer
            - cleaningTrolley
            - compactor
            - constructionOrMaintenanceVehicle
            - dumper
            - e-moped
            - e-scooter
            - e-motorcycle
            - fireTender
            - fourWheelDrive
            - highSidedVehicle
            - hopper
            - lorry
            - minibus
            - moped
            - motorcycle
            - motorcycleWithSideCar
            - motorscooter
            - policeVan
            - publicMotor
            - sweepingMachine
            - tanker
            - tempo
            - threeWheeledVehicle
            - tipper
            - trailer
            - tram
            - trolley
            - twoWheeledVehicle
            - van
            - vehicleWithoutCatalyticConverter
            - vehicleWithCaravan
            - vehicleWithTrailer
            - withEvenNumberedRegistrationPlates
            - withOddNumberedRegistrationPlates
            - other
          category:
            type: array
            description: Property. Vehicle category(ies) from an external point of view. This is different than the vehicle type (car, lorry, etc.) represented by the `vehicleType` property. Model:'https://schema.org/Text'. Enum:'municipalServices, nonTracked, private, public, specialUsage, tracked'. Tracked vehicles are those vehicles which position is permanently tracked by a remote system. Or any other needed by an application They incorporate a GPS receiver together with a network connection to periodically update a reported position (location, speed, heading ...).
            items:
              type: string
              enum:
              - municipalServices
              - nonTracked
              - private
              - public
              - specialUsage
              - tracked
          previousLocation:
            $ref: '#/components/schemas/location'
          speed:
            description: Property. Denotes the magnitude of the horizontal component of the vehicle's current velocity and is specified in Kilometers per Hour. If provided, the value of the speed attribute must be a non-negative real number. `-1` MAY be used if speed is transiently unknown for some reason. Model:'https://schema.org/Number'. Units:'Km/h'
            oneOf:
            - minimum: 0
              type: number
            - maximum: -1
              minimum: -1
              type: number
          heading:
            description: Property. Denotes the direction of travel of the vehicle and is specified in decimal degrees, where 0 <= `heading` < 360, counting clockwise relative to the true north. If the vehicle is stationary (i.e. the value of the `speed` attribute is `0`), then the value of the heading attribute must be equal to `-1`. Model:'https://schema.org/Number'. Units:'Degree'
            oneOf:
            - maximum: 360
              minimum: 0
              type: number
            - type: number
          cargoWeight:
            exclusiveMinimum: false
            type: number
            description: Property. Current weight of the vehicle's cargo. Model:'https://schema.org/Number'. Units:'Kilograms'
          vehicleIdentificationNumber:
            type: string
            description: Property. The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles. Model:'https://schema.org/vehicleIdentificationNumber'.
          vehiclePlateIdentifier:
            type: string
            description: 'Property.  An identifier or code displayed on a vehicle registration plate attached to the vehicle used for official identification purposes. The registration identifier is numeric or alphanumeric and is unique within the issuing authority''s region. Model:''https://schema.org/Text''. Normative References: DATEXII `vehicleRegistrationPlateIdentifier`'
          fleetVehicleId:
            type: string
            description: Property. The identifier of the vehicle in the context of the fleet of vehicles to which it belongs. Model:'https://schema.org/Text'.
          dateVehicleFirstRegistered:
            type: string
            description: Property. The date of the first registration of the vehicle with the respective public authorities. Model:'https://schema.org/dateVehicleFirstRegistered'.
            format: date
          dateFirstUsed:
            type: string
            description: Property. Timestamp which denotes when the vehicle was first used. Model:'https://schema.org/DateTime'.
            format: date
          purchaseDate:
            type: string
            description: Property. The date the item e.g. vehicle was purchased by the current owner. Model:'https://schema.org/purchaseDate'.
            format: date-time
          mileageFromOdometer:
            type: number
            description: Property. The total distance travelled by the particular vehicle since its initial production, as read from its odometer. Model:'https://schema.org/mileageFromOdometer'.
          vehicleConfiguration:
            type: string
            description: Property. A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'. Model:'https://schema.org/vehicleConfiguration'.
          feature:
            type: array
            description: 'Property. Feature(s) incorporated by the vehicle. Model:''https://schema.org/Text''. Enum:'' abs, airbag, alarm, backCamera, disabledRamp, gps, internetConnection, overspeed, proximitySensor, wifi''. Or any other needed by the application. In order to represent multiple instances of a feature it can be used the following syntax: `<feature>,<occurences>`. For example, a car with 4 airbags will be represented by `airbag,4`.'
            items:
              type: string
              enum:
              - abs
              - airbag
              - alarm
              - backCamera
              - disabledRamp
              - gps
              - internetConnection
              - overspeed
              - proximitySensor
              - wifi
          serviceProvided:
            type: array
            description: Property. Service(s) the vehicle is capable of providing or it is assigned to. Model:'https://schema.org/Text'. Enum:'auxiliaryServices, cargoTransport, construction, fairground, garbageCollection, goodsSelling, maintenance, parksAndGardens, roadSignalling, specialTransport, streetCleaning, streetLighting, urbanTransit, wasteContainerCleaning'. Or any other value needed by an specific application.
            items:
              type: string
              enum:
              - auxiliaryServices
              - cargoTransport
              - construction
              - fairground
              - garbageCollection
              - goodsSelling
              - maintenance
              - parksAndGardens
              - roadSignalling
              - specialTransport
              - streetCleaning
              - streetLighting
              - urbanTransit
              - wasteContainerCleaning
          vehicleSpecialUsage:
            type: string
            description: Property. Indicates whether the vehicle is been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale. Model:'https://schema.org/vehicleSpecialUsage'. Enum:'ambulance, fireBrigade, military, police, schoolTransportation, taxi, trashManagement'
            enum:
            - ambulance
            - fireBrigade
            - military
            - police
            - schoolTransportation
            - taxi
            - trashManagement
          refVehicleModel:
            description: Relationship. Model:'https://schema.org/URL'. Reference to a VehicleModel
            anyOf:
            - maxLength: 256
              minLength: 1
              pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
              type: string
              description: Property. Identifier format of any NGSI entity
            - type: string
              description: Property. Identifier format of any NGSI entity
              format: uri
          serviceStatus:
            type: string
            description: 'Property. Vehicle status (from the point of view of the service provided, so it could not apply to private vehicles). Model:''https://schema.org/DateTime''. `parked` : Vehicle is parked and not providing any service at the moment. `onRoute` : Vehicle is performing a mission. A comma-separated modifier(s) can be added to indicate what mission is currently delivering the vehicle. For instance `onRoute,garbageCollection` can be used to denote that the vehicle is on route and in a garbage collection mission. ''broken'' : Vehicle is suffering a temporary breakdown. `outOfService` : Vehicle is on the road but not performing any mission, probably going to its parking area. Enum:''broken, onRoute, outOfService, parked'''
            enum:
            - broken
            - onRoute
            - outOfService
            - parked
          bearing:
            type: number
            description: Property. Model:'https://schema.org/Number'. Gives the vehicle GPS angle measured in a clockwise direction from the True North. SameAs 'bearing' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)
          wardId:
            type: string
            description: Property. Model:'https://schema.org/Text'. Ward ID of the entity corresponding to this observation.
          tripNetWeightCollected:
            type: number
            description: Property. Model:'https://schema.org/Number'. The net weight collected by the vehicle corresponding to this observation at the end of the trip.
          license_plate:
            type: string
            description: 'Property. Model:''https://schema.org/Text''. Gives the License Plate number of the vehicle. SameAs: license_plate field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)'''
          deviceBatteryStatus:
            type: string
            description: Property. Model:'https://schema.org/Text'. Gives the Battery charging status of the reporting device. Enum:'connected, disconnected'.
            enum:
            - connected
            - disconnected
          ignitionStatus:
            type: boolean
            description: Property. Model:'https://schema.org/Boolean'. Gives the ignition status of the vehicle. True means ignited
          vehicleRunningStatus:
            type: string
            description: Property. Model:'https://schema.org/Text'. Gives the Battery charging status of the reporting device. Enum:'running, waiting, stopped'.
            enum:
            - running
            - stopped
            - waiting
          currentTripCount:
            type: number
            description: Property. Model:'https://schema.org/Number'. The current count of trips made by the vehicle corresponding to this observation on the given day of operation.
          zoneName:
            type: string
            description: Property. Model:'https://schema.org/Text'. Zone name of the entity corresponding to this observation
          vehicleAltitude:
            type: string
            description: Property. Model:'https://schema.org/Text'. Gives the current altitude of the vehicle using GPS
          observationDateTime:
            type: string
            description: Property. Model:'https://schema.org/DateTime'. Last reported time of observation
            format: date-time
          deviceSimNumber:
            type: string
            description: Property. Model:'https://schema.org/Text'. Gives the SIM number of the device in the vehicle.
          wardName:
            type: string
            description: Property. Model:'https://schema.org/Text'. Ward name of the entity corresponding to this observation.
          reportId:
            type: string
            description: Property. Model:'https://schema.org/Text'. Unique Id assigned for the issue or report or feedback or transaction corresponding to this observation.
          vehicleTrackerDevice:
            type: string
            description: Property. Model:'https://schema.org/Text'. Installation status of the GPS device or the tracking device fitted to the vehicle corresponding to this observation.
          fuelFilled:
            type: number
            description: Property. Model:'https://schema.org/Number'. Amount of fuel filled in liters to the vehicle corresponding to this observation.
          fuelEfficiency:
            type: number
            description: Property. Model:'https://schema.org/Number'. The distance traveled per unit of fuel used, commonly in kilometers per liter (km/L).
          fuelType:
            type: string
            description: Property. Model:'https://schema.org/Text'. The type of fuel suitable for the engine or engines of the vehicle corresponding to this observation.
          serviceOnDuty:
            type: string
            description: Property. Model:'https://schema.org/Boolean'. Nature of service provided by emergency vehicle corresponding to this observation. True indicates the emergency vehicle corresponding to this observation is attending to/ servicing to an emergency call of duty and is False otherwise.
          emergencyVehicleType:
            type: string
            description: Property. Model:'https://schema.org/Text'. Type of emergency vehicle corresponding to this observation. Enum:'policeCar, policeMotorcycle, policeVan, policeSWAT, fireEngine, waterTender, airAmbulance, ambulance, motorcycleAmbulance, rescueVehicle, hazardousMaterialsApparatus, towTruck
            enum:
            - policeCar
            - policeMotorcycle
            - policeVan
            - policeSWAT
            - fireEngine
            - waterTender
            - airAmbulance
            - ambulance
            - motorcycleAmbulance
            - rescueVehicle
            - hazardousMaterialsApparatus
            - towTruck
          municipalityInfo:
            $ref: '#/components/schemas/schema_6_municipalityInfo'
    schema_road:
      type: object
      properties:
        surface:
          type: string
          description: Property. Road surface.
          enum:
          - asphalt
          - concrete
          - composite
          - chipseal
          - gravel
          - paver
        roughness:
          minimum: 0
          type: number
          description: 'Property. Value of international roughness index (IRI). Units: meter per kilometer (m/km).'
        friction:
          maximum: 0.9
          minimum: 0.1
          type: number
          description: Property. Value of friction coefficient, the value is related to the type of road material. Minimum related to friction on ice. Maximum related to friction on asphalt or concrete (dry). Ref:https://ieeexplore.ieee.org/document/6940633
      description: Property. Road features.
      example: null
    schema_roadSegment:
      type: object
      properties:
        length:
          type: number
          description: Property. Total length of this road segment in meters. Constant. Units:Meter (m).
      description: Property. Road segment features.
      example: null
    schema_bikeLane:
      type: object
      properties:
        laneLength:
          type: number
          description: Property. Total length of this bike lane in meters. Constant. Units:Meter (m).
        laneWidth:
          type: number
          description: Property. Model:'https://schema.org/Number'. Indicates the width of the lane.
        laneOccupancy:
          type: number
          description: Property. Model:'https://schema.org/Number'. Indicates the number of vehicles circulating on the lane.
      description: Property. Bike Lane
      example: null
    schema_pedestrianLane:
      type: object
      properties:
        refRoadSegment:
          description: Relationship. Concerned road segment on which the observation has been made
          anyOf:
          - maxLength: 256
            minLength: 1
            pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
            type: string
            description: Property. Identifier format of any NGSI entity
          - type: string
            description: Property. Identifier format of any NGSI entity
            format: uri
        laneLength:
          type: number
          description: Property. Total length of this bike lane in meters. Constant. Units:Meter (m).
        laneWidth:
          type: number
          description: Property. Model:'https://schema.org/Number'. Indicates the width of the lane.
        laneOccupancy:
          type: number
          description: Property. Model:'https://schema.org/Number'. Indicates the number of vehicles circulating on the lane.
        direction:
          type: string
          description: Property. Usual direction of travel in the walkway referred by this observation with respect to the intersection center
          enum:
          - inbound
          - outbound
      description: Property. Pedestrian Lane
      example: null
    schema_currentWeather:
      type: object
      properties:
        temperature:
          $ref: '#/components/schemas/temperature'
        humidity:
          $ref: '#/components/schemas/relativeHumidity'
        visibility:
          description: Property. Model:'http://schema.org/Text'. Categories of visibility
          anyOf:
          - type: string
            enum:
            - veryPoor
            - poor
            - moderate
            - good
            - veryGood
            - excellent
          - minimum: 0
            type: number
        windDirection:
          maximum: 360
          minimum: 0
          type: number
          description: Property. Model:'http://schema.org/Number'. Direction of the wind bet
        windSpeed:
          minimum: 0
          type: number
          description: Property. Model:'http//schema.org/Number'. Intensity of the wind
        gustSpeed:
          type: number
          description: Property. A sudden burst of high-speed wind over the observed average wind speed lasting only for a few seconds.
        precipitation:
          minimum: 0
          type: number
          description: Property. Model:'https://schema.org/Number'. Amount of water rain expected. Units:'Liters per square meter'.
        waterLevel:
          minimum: 0
          type: number
          description: Property. Model:'https://schema.org/Number'. The water level surface elevation observed by Hydrometric measurement sensors, namely a [Stream Gauge](https://en.wikipedia.org/wiki/Stream_gauge) expressed in centimeters. Units:'centimeters'
      description: Property. Current weather information corresponding to this observation.
      example: null
    schema_municipalityInfo:
      type: object
      properties:
        cityID:
          type: string
          description: Property. Model:'https://schema.org/Text'. City ID corresponding to this observation.
        stateName:
          type: string
          description: Property. Model:'https://schema.org/Text'. Name of the state corresponding to this observation.
        cityName:
          type: string
          description: Property. Model:'https://schema.org/Text'. City name corresponding to this observation.
        zoneName:
          type: string
          description: Property. Model:'https://schema.org/Text'. Zone name corresponding to this observation.
        zoneID:
          type: string
          description: Property. Model:'https://schema.org/Text'. Zone ID corresponding to this observation.
      description: Property. Model:'https://schema.org/Text. Municipality information corresponding to this observation.
      example: null
    LocationCommons_address:
      type: object
      properties:
        streetAddress:
          type: string
          description: Property. The street address. Model:'https://schema.org/streetAddress'
        addressLocality:
          type: string
          description: Property. The locality in which the street address is, and which is in the region. Model:'https://schema.org/addressLocality'
        addressRegion:
          type: string
          description: Property. The region in which the locality is, and which is in the country. Model:'https://schema.org/addressRegion'
        addressCountry:
          type: string
          description: Property. The country. For example, Spain. Model:'https://schema.org/addressCountry'
        postalCode:
          type: string
          description: Property. The postal code. For example, 24004. Model:'https://schema.org/https://schema.org/postalCode'
        postOfficeBoxNumber:
          type: string
          description: Property. The post office box number for PO box addresses. For example, 03578. Model:'https://schema.org/postOfficeBoxNumber'
      description: Property. The mailing address. Model:'https://schema.org/address'
      example: null
    schema_3_accidentStatisticalDate:
      type: object
      properties:
        year:
          type: integer
        quarter:
          type: integer
        weekday:
          type: string
          description: Week days
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
        hour:
          type: integer
      description: Property. approximate datetime of the accident (often original accident data source reports only statistical attributes such as season, weekday and approximate hour. Model:'https://schema.org/DateTime'
      example: null
    schema_4_municipalityInfo:
      type: object
      properties:
        district:
          type: string
          description: Property. Model:'https://schema.org/Text'. District name corresponding to this observation.
        cityID:
          type: string
          description: Property. Model:'https://schema.org/Text'. City ID corresponding to this observation.
        stateName:
          type: string
          description: Property. Model:'https://schema.org/Text'. Name of the state corresponding to this observation.
        cityName:
          type: string
          description: Property. Model:'https://schema.org/Text'. City name corresponding to this observation.
        zoneName:
          type: string
          description: Property. Model:'https://schema.org/Text'. Zone name corresponding to this observation.
        zoneID:
          type: string
          description: Property. Model:'https://schema.org/Text'. Zone ID corresponding to this observation.
      description: Property. Model:'https://schema.org/Text. Municipality information corresponding to this observation.
      example: null
    schema_6_municipalityInfo:
      type: object
      properties:
        district:
          type: string
          description: Property. Model:'https://schema.org/Text'. District name corresponding to this observation.
        ulbName:
          type: string
          description: Property. Model:'https://schema.org/Text'. Name of the Urban Local Body corresponding to this observation.
        cityId:
          type: string
          description: Property. Model:'https://schema.org/Text'. City ID corresponding to this observation.
        wardId:
          type: string
          description: Property. Model:'https://schema.org/Text'. Ward ID corresponding to this observation.
        stateName:
          type: string
          description: Property. Model:'https://schema.org/Text'. Name of the state corresponding to this observation.
        cityName:
          type: string
          description: Property. Model:'https://schema.org/Text'. City name corresponding to this observation
        zoneName:
          type: string
          description: Property. Model:'https://schema.org/Text'. Zone name corresponding to this observation.
        zoneId:
          type: string
          description: Property. Model:'https://schema.org/Text'. Zone ID corresponding to this observation.
        wardName:
          type: string
          description: Property. Model:'https://schema.org/Text'. Ward name corresponding to this observation.
        wardNum:
          type: number
          description: Property. Model:'https://schema.org/Number'. Ward number corresponding to this observation.
      description: Property. Model:'https://schema.org/Text. Municipality information corresponding to this observation.
      example: null
